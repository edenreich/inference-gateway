---
version: "3"

tasks:
  cluster-create:
    desc: Create a local Kubernetes cluster with Grafana Operator
    cmds:
      - ctlptl apply -f Cluster.yaml
      - task: deploy-operators

  cluster-delete:
    desc: Delete the local Kubernetes cluster
    cmds:
      - ctlptl delete -f Cluster.yaml --cascade=true

  deploy-operators:
    desc: Deploy all needed operators to kube-system namespace
    cmds:
      - helm repo add grafana https://grafana.github.io/helm-charts
      - helm repo update
      - |
        helm upgrade --install \
          grafana-operator grafana/grafana-operator \
          --namespace kube-system \
          --create-namespace \
          --version v5.16.0 \
          --set watch.namespaces={monitoring} \
          --wait && \
          echo "Grafana Operator installed successfully!"
      - |
        helm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts
        helm repo update
      - |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update
      - |
        helm upgrade --install \
          prometheus-operator prometheus-community/kube-prometheus-stack \
          --namespace kube-system \
          --create-namespace \
          --version 69.6.0 \
          --wait && \
          echo "Prometheus Operator installed successfully!"
      - echo "All operators deployed successfully!"

  deploy:
    desc: Deploy all components
    cmds:
      - task: deploy-inference-gateway
      - task: deploy-monitoring
      - echo "All components deployed successfully!"

  deploy-monitoring:
    desc: Deploy monitoring components
    cmds:
      - kubectl create namespace monitoring --dry-run=client -o yaml | kubectl apply --server-side -f -
      - kubectl apply -f grafana/
      - kubectl apply -f prometheus/
      - sleep 1 && kubectl rollout status -n monitoring deployment/grafana-deployment
      - echo "Monitoring stack deployed successfully!"

  deploy-inference-gateway:
    desc: Deploy the Inference Gateway
    cmds:
      - kubectl create namespace inference-gateway --dry-run=client -o yaml | kubectl apply --server-side -f -
      - kubectl apply -f inference-gateway/
      - kubectl rollout status -n inference-gateway deployment/inference-gateway
      - echo "Inference Gateway deployed successfully!"

  undeploy:
    desc: Undeploy all components
    cmds:
      - kubectl delete namespace inference-gateway --ignore-not-found
      - kubectl delete namespace monitoring --ignore-not-found
      - echo "All components undeployed successfully!"

  restart-inference-gateway:
    desc: Restart the Inference Gateway
    cmds:
      - kubectl -n inference-gateway rollout restart deployment/inference-gateway
      - kubectl -n inference-gateway rollout status deployment/inference-gateway

  proxy-grafana:
    desc: Access Grafana dashboard locally
    cmds:
      - kubectl -n monitoring port-forward svc/grafana 3000:3000

  proxy-inference-gateway:
    desc: Access the Inference Gateway locally
    cmds:
      - kubectl -n inference-gateway port-forward svc/inference-gateway 8080:8080

  clean:
    desc: Clean the project
    cmds:
      - task: undeploy
      - echo "Project cleaned successfully!"
